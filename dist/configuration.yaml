# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

#customize: !include customize.yaml

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
# browser_mod - TEMPORARILY DISABLED due to compatibility issues with newer HA versions
# Enable this later once the mock devices are working properly
# browser_mod:
#   devices:
#     8fbe9ff3-9e1ed0d0:
#       name: mac_chrome
#     e98effc3-b940ce40:
#       name: tablet

##############################################
################ UI Libraries ################
##############################################

# I chose to not just use HACS, as some libraries are custom
# (for styling) and I prefer manual control.

frontend:
  themes: !include themes.yaml

homekit: !include homekit.yaml
lovelace:
  mode: yaml
  dashboards:
    lovelace-mobile:
      mode: yaml
      filename: ui-lovelace_mobile.yaml
      title: Mobile
      icon: mdi:cellphone
      show_in_sidebar: true

  resources:
    ################
    ##### LOCAL ####
    ################

    # TEMPORARILY DISABLED - causing JS errors
    # - type: module
    #   url: /local/js/custom-header.js?v=1.8.3
    # - type: module
    #   url: /local/js/button-entity-row.js
    - type: module
      url: /local/js/now-playing-card.js

      #######################
      ##### HACS CUSTOM #####
      #######################

    # TEMPORARILY DISABLED - may be causing issues with browser_mod popups
    # - url: /hacsfiles/light-popup-card/light-popup-card.js
    #   type: module
    - url: /hacsfiles/Homekit-panel-card/homekit-panel-card.js
      type: module

      ########################
      ##### HACS DEFAULT #####
      ########################

    - url: /hacsfiles/lovelace-card-mod/card-mod.js
      type: module
    - url: /hacsfiles/popup-backdrop-filter/popup-backdrop-filter.js
      type: module
    - url: /hacsfiles/text-element/text-element.js
      type: module
    - url: /hacsfiles/config-template-card/config-template-card.js
      type: module
    - url: /hacsfiles/bar-card/bar-card.js
      type: module
    - url: /hacsfiles/circle-sensor-card/circle-sensor-card.js
      type: module
    - url: /hacsfiles/lovelace-layout-card/layout-card.js
      type: module
    - url: /hacsfiles/mini-graph-card/mini-graph-card-bundle.js
      type: module
    - url: /hacsfiles/mini-media-player/mini-media-player-bundle.js
      type: module
    - url: /hacsfiles/vertical-stack-in-card/vertical-stack-in-card.js
      type: module
    - url: /hacsfiles/upcoming-media-card/upcoming-media-card.js
      type: module
    - url: /hacsfiles/simple-weather-card/simple-weather-card-bundle.js
      type: module
    - url: /hacsfiles/weather-card/weather-card.js
      type: module
    - url: /hacsfiles/button-card/button-card.js
      type: module
    - url: /hacsfiles/spotify-card/spotify-card.js
      type: module
    - url: /hacsfiles/light-entity-card/light-entity-card.js
      type: module
    - url: /hacsfiles/lovelace-hui-element/hui-element.js
      type: module
    - url: /hacsfiles/lovelace-xiaomi-vacuum-map-card/xiaomi-vacuum-map-card.js
      type: module

      ###################################################
      ##### CARDS I CREATED OR MODIFIED FOR STYLING #####
      ###################################################
      # I cannot support any issues with these, they are
      # completely custom. I cant confirm that CSS styles
      # will look right in any other browser than my own.

    - type: module
      url: /local/js/buien-rain-card.js?v=0.0.60
    - type: js
      url: /local/js/light-slider-card-lajv.js
    - type: js
      url: /local/js/nightscout-card.js?v=0.0.31

# Hue integration is now configured via UI (Settings → Devices & Services)
# The old YAML configuration has been removed as it's no longer supported

# MQTT - Configured via UI (Settings → Devices & Services)
# Comment out YAML configuration and set up via UI instead
# mqtt:
#   broker: 192.168.0.248
#   port: 1883
#   username: !secret mqtt_user_name
#   password: !secret mqtt_password
#   discovery: true

#################################################################
## Components
#################################################################

# google:
#   client_id: !secret google_client_id
#   client_secret: !secret google_secret

# Spotify integration is now configured via UI (Settings → Devices & Services)
# The old YAML configuration has been removed as it's no longer supported

spotcast:
  sp_dc: !secret sp_dc
  sp_key: !secret sp_key
  accounts:
    santa:
      sp_dc: !secret sp_dc_santa
      sp_key: !secret sp_key_santa

counter:
  people_on_roof:
    initial: 0
    step: 1

## For robot vacuum & automation status - OFFLINE CAMERA
# Comment out until Xiaomi vacuum is properly configured
# camera:
#   - platform: xiaomi_cloud_map_extractor
#     host: !secret xiaomi_vacuum_host
#     token: !secret xiaomi_vacuum_token
#     username: !secret xiaomi_cloud_username
#     password: !secret xiaomi_cloud_password
#     draw: ["all"]
#     map_transformation:
#       trim:
#         top: 15
#         bottom: 15
#         left: 0
#         right: 0
#     attributes:
#       - calibration_points

input_text:
  room_cleaning:
    name: Currently Cleaning Room
    initial: charging

## Basic Presence - OFFLINE TRACKERS
# Comment out until Bluetooth and network scanning is properly configured
# device_tracker:
#   - platform: bluetooth_tracker
#     track_new_devices: true
#     interval_seconds: 5
#     consider_home: 30
#   - platform: nmap_tracker
#     hosts:
#       - 192.168.0.233
#       - 192.168.0.204
#       - 192.168.0.241
#       - 192.168.178.136
#       - 192.168.178.227
#     home_interval: 4

# Buienradar weather integration is now configured via UI (Settings → Devices & Services)
# The old YAML weather platform configuration has been removed as it's no longer supported

input_number:
  nightime:
    name: Nightime value
    initial: 0
    min: 0
    max: 1
    step: 1
    mode: box

  range_high:
    name: High Limit
    initial: 8.0
    min: 0
    max: 30

  range_low:
    name: High Limit
    initial: 4.0
    min: 0
    max: 30

  # Mock sliders for dimmable lights and climate control
  mock_living_room_brightness:
    name: Living Room Brightness
    min: 0
    max: 100
    step: 1
    unit_of_measurement: "%"
    icon: mdi:brightness-6

  mock_bedroom_brightness:
    name: Bedroom Brightness
    min: 0
    max: 100
    step: 1
    unit_of_measurement: "%"
    icon: mdi:brightness-6

  mock_thermostat_temperature:
    name: Target Temperature
    min: 15
    max: 30
    step: 0.5
    unit_of_measurement: "°C"
    icon: mdi:thermometer

  mock_music_volume:
    name: Music Volume
    min: 0
    max: 100
    step: 5
    unit_of_measurement: "%"
    icon: mdi:volume-high

  # Brightness controls for all dimmable lights
  # Bedroom John
  bedroom_john_desk_brightness:
    name: "Bedroom John Desk Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  bedroom_john_ceiling_brightness:
    name: "Bedroom John Ceiling Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Bedroom Guest
  bedroom_guest_ceiling_brightness:
    name: "Bedroom Guest Ceiling Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Bedroom Master
  bedroom_master_ceiling_brightness:
    name: "Bedroom Master Ceiling Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Bathroom Guest
  bathroom_guest_ceiling_brightness:
    name: "Bathroom Guest Ceiling Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Bathroom Master
  bathroom_master_ceiling_brightness:
    name: "Bathroom Master Ceiling Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  bathroom_master_mirror_brightness:
    name: "Bathroom Master Mirror Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Family Room
  family_room_couch_brightness:
    name: "Family Room Couch Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  family_room_ceiling_brightness:
    name: "Family Room Ceiling Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Living Room
  living_room_ceiling_brightness:
    name: "Living Room Ceiling Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Kitchen
  kitchen_ceiling_brightness:
    name: "Kitchen Ceiling Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  kitchen_cabinets_brightness:
    name: "Kitchen Cabinets Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  kitchen_island_brightness:
    name: "Kitchen Island Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Missing brightness controls - ALL LIGHTS SHOULD BE DIMMABLE
  # Bedroom John (missing closet)
  bedroom_john_closet_brightness:
    name: "Bedroom John Closet Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Bedroom Guest (missing closet)
  bedroom_guest_closet_brightness:
    name: "Bedroom Guest Closet Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Bedroom Master (missing closet)
  bedroom_master_closet_brightness:
    name: "Bedroom Master Closet Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Bathroom Guest (missing toilet, shower)
  bathroom_guest_toilet_brightness:
    name: "Bathroom Guest Toilet Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  bathroom_guest_shower_brightness:
    name: "Bathroom Guest Shower Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Bathroom Master (missing toilet, shower, cabinet)
  bathroom_master_toilet_brightness:
    name: "Bathroom Master Toilet Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  bathroom_master_shower_brightness:
    name: "Bathroom Master Shower Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  bathroom_master_cabinet_brightness:
    name: "Bathroom Master Cabinet Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Family Room (missing wall TV)
  family_room_wall_tv_brightness:
    name: "Family Room Wall TV Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Living Room (missing wall)
  living_room_wall_brightness:
    name: "Living Room Wall Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

  # Kitchen (missing wall)
  kitchen_wall_brightness:
    name: "Kitchen Wall Brightness"
    min: 0
    max: 255
    step: 1
    initial: 51 # Dim setting (20% of 255)
    unit_of_measurement: "brightness"

## For IR Blaster / Speaker remote control through homekit

switch:
  - platform: broadlink
    mac: "78:0F:77:18:54:CB"
    switches:
      - name: Speakers
        command_on: "JgBYAAABJ5UVEBUREhQUERUREhMVERI4FRAVEhEUFBEVNRI4FTUWEBITFRESExURFBISExU1FDYSOBQ2FDYSOBQ1FjUSExUREQAFpgABKkgSAAxVAAEnSxUADQU="
        command_off: "JgBYAAABKJMTExQRFRIRFBITExMTEhQ2ExMVEBUSERQTNxU1EjgTEhI4EjgVNRI4EzcWDxMTFTUWEBITFBISFBITEzcSOBUQFQAFogABKkgSAAxWAAEnSxUADQU="
      - name: Speakers Up
        command_on: "JgBQAAABJ5UTEhQSEhQUERMTEhMVERI4EhMVERIUFBETNxI4EzcUEhE4FTUVNRIUExITExM3EzcSFBMSFhASOBM2FjURFBMSEgAFpgABKkgSAA0FAAAAAAAAAAA="
        command_off: "JgBQAAABJ5UTEhQSEhQUERMTEhMVERI4EhMVERIUFBETNxI4EzcUEhE4FTUVNRIUExITExM3EzcSFBMSFhASOBM2FjURFBMSEgAFpgABKkgSAA0FAAAAAAAAAAA="
      - name: Speakers Down
        command_on: "JgBYAAABK5EUEhUQFhASFRQQFREUExM1FBIVEBYRERQVNBY1EzcVEBURExQTERU1FRAVERQ2FTUVNRQ2FTUVERM2FjQVERQTEwAFowABJ0sVAAxUAAEpSRMADQU==="
        command_off: "JgBYAAABK5EUEhUQFhASFRQQFREUExM1FBIVEBYRERQVNBY1EzcVEBURExQTERU1FRAVERQ2FTUVNRQ2FTUVERM2FjQVERQTEwAFowABJ0sVAAxUAAEpSRMADQU==="
      - name: Projector Audio
        command_on: "JgBYAAABJ5UUERMTFRAVERIUFBETExI4FRATExURFBESOBU1FTUSFBMSFTUSFBM3EhQSExQ2EzcSOBQREzgSExM3EjgTEhMUEAAFpwABKEoTAAxVAAEnSxUADQU==="
        command_off: "JgBYAAABKpEVERIUFBETExUQFRIRFBQ2FBIRFBQRExMVNRU1EjgVEBUREjgVNRU1EhQUERU2ETgVNRUREhMVERI4EzcUERMTFAAFpAABKkgSAAxWAAEnSxMADQU==="

#################################################################
## Sensors
#################################################################

binary_sensor:
  # OFFLINE DEVICE - Roof door sensor depends on unavailable roof_door_ypos sensor
  # Uncomment when roof door hardware is fixed
  # - platform: template
  #   sensors:
  #     roof_door_open:
  #       friendly_name: "Roof Door Open"
  #       device_class: door
  #       value_template: "{{ states('sensor.roof_door_ypos')|int > 30 }}"

  - platform: tod
    name: Night
    after: sunset
    before: sunrise

sensor:
  # Radarr integration is now configured via UI (Settings → Devices & Services)
  # The old YAML sensor platform configuration has been removed as it's no longer supported

  # OFFLINE INTEGRATIONS - Comment out until available
  # - platform: plex_recently_added
  #   name: Recently Added Movies # will create sensor.recently_added_movies
  #   token: !secret plex_token
  #   host: 192.168.0.245
  #   port: 32400
  #   section_types:
  #     - movie

  # - platform: plex_recently_added
  #   name: Recently Added TV # will create sensor.recently_added_tv
  #   token: !secret plex_token
  #   host: 192.168.0.245
  #   port: 32400
  #   section_types:
  #     - show

  - platform: time_date
    display_options:
      - "time"
      - "date"
      - "date_time"
      - "date_time_utc"
      - "date_time_iso"
      - "time_date"
      - "time_utc"

  # Buienradar sensor integration is now configured via UI (Settings → Devices & Services)
  # The old YAML sensor platform configuration has been removed as it's no longer supported
  # Weather data will be available through the UI-configured integration

  # OFFLINE INTEGRATIONS - Comment out until available
  # - platform: darksky
  #   api_key: !secret dark_sky_key
  #   latitude: 52.365150
  #   longitude: 4.934230
  #   forecast:
  #     - 0
  #   hourly_forecast:
  #     - 0
  #   monitored_conditions:
  #     - summary
  #     - icon
  #     - temperature
  #     - cloud_cover
  #     - dew_point
  #     - uv_index
  #     - moon_phase
  #     - alerts

  #   - platform: rest
  #     name: luke_cgm
  #     resource: https://lajv-ichor.herokuapp.com/api/v1/entries/current.json
  #     value_template: >
  #       sgv:{{value_json[0].sgv}}, trend:{{value_json[0].trend}}, direction:{{value_json[0].direction}}, time:{{ ( (as_timestamp(now()) - as_timestamp(value_json[0].dateString) ) / 60) | round(0) }}

  #   - platform: rest
  #     name: luke_treatments
  #     resource: https://lajv-ichor.herokuapp.com/api/v1/treatments.json
  #     value_template: >
  #       carbs:{{value_json[0].carbs}}, eventType:{{value_json[0].eventType}}, insulin:{{value_json[0].insulin}}, time:{{ (as_timestamp(value_json[0].created_at)) }}

  #######################################################################################
  ## Templates (Used for updating text in the UI and converting sensors to CSS values )
  #######################################################################################

  - platform: template
    sensors:
      # OFFLINE SENSOR - roof_door_ypos depends on unavailable hardware
      # Uncomment when roof door action sensor is working
      # - platform: template
      #   sensors:
      #     roof_door_ypos:
      #       value_template: >-
      #         {{ state_attr('sensor.roof_door_action','angle_y_absolute') | int }}
      #       unit_of_measurement: "°"
      #       friendly_name: "Roof Door Y Angle"
      #       icon_template: >-
      #         {% if state_attr('sensor.roof_door_action','angle_y_absolute') | int < 40 %}
      #           mdi:door-closed
      #         {% else %}
      #           mdi:door-open
      #         {% endif %}

      #   luke_cgm_sgv:
      #     value_template: >
      #       {{ states('sensor.luke_cgm') | regex_findall_index("sgv:(\d+)") }}
      #     unit_of_measurement: "mmol"
      # #   luke_cgm_trend:
      # #     value_template: >
      # #       {{ states('sensor.luke_cgm') | regex_findall_index("trend:(\d+)") }}
      #   luke_cgm_direction:
      #     value_template: >
      #       {{ states('sensor.luke_cgm') | regex_findall_index("direction:(\w+)") }}
      #   luke_cgm_time:
      #     value_template: >
      #       {{ states('sensor.luke_cgm') | regex_findall_index("time:(\d+)") }}
      #   luke_cgm_sgv_mmol:
      #     value_template: >
      #       {%- set mgdl = states('sensor.luke_cgm_sgv') | float %}
      #       {%- set mmol = (mgdl / 18) %}
      #       {{ mmol | float | round(1)}}
      #     unit_of_measurement: "mmol/L"
      #     device_class: temperature
      #     friendly_name: "Sugar Level"
      #     icon_template: >-
      #       {%- set mgdl = states('sensor.luke_cgm_sgv') | float %}
      #       {%- set mmol = (mgdl / 18) %}
      #       {% if mmol < 4 %}
      #         mdi:arrow-up-bold
      #       {% else %}
      #         {% if mmol > 8 %}
      #           mdi:arrow-up-bold
      #         {% else %}
      #           mdi:water
      #         {% endif %}
      #       {% endif %}

      #   luke_inslulin:
      #     value_template: >
      #       {{ states('sensor.luke_treatments') | regex_findall_index("insulin:(\d+)") }}
      #     unit_of_measurement: "units"

      #   luke_carbs:
      #     value_template: >
      #       {{ states('sensor.luke_treatments') | regex_findall_index("carbs:(\d+)") }}
      #     unit_of_measurement: "g"

      ## to get the current view of my tablet for UI automations
      tablet_view:
        value_template: "{{ states('sensor.tablet', 'unknown') }}"
        friendly_name: Tablet View

      ## Calculates daylight brightness out of 100% - with defaults for development
      sunlight_pct:
        value_template: >-
          {%- set elevation = state_attr('sun.sun','elevation') | float(45) %}
          {%- set cloud_coverage = 30 %}
          {%- set cloud_factor = (1 - (0.75 * ( cloud_coverage / 100) ** 3 )) %}
          {%- set min_elevation = -6 %}
          {%- set max_elevation = 90 %}
          {%- set adjusted_elevation = elevation - min_elevation %}
          {%- set adjusted_elevation = [adjusted_elevation,0] | max %}
          {%- set adjusted_elevation = [adjusted_elevation,max_elevation - min_elevation] | min %}
          {%- set adjusted_elevation = adjusted_elevation / (max_elevation - min_elevation) %}
          {%- set adjusted_elevation = adjusted_elevation %}
          {%- set adjusted_elevation = adjusted_elevation * 100 %}
          {%- set brightness = adjusted_elevation * cloud_factor %}
          {{ brightness | round }}
        unit_of_measurement: "%"
        device_class: "illuminance"

      ## Daylight brightness converted to opacity for CSS - with defaults
      sunlight_opacity:
        value_template: >-
          {%- set sunpct = states('sensor.sunlight_pct') | float(50) %}
          {%- set opacity = sunpct / 100 | float %}
          {{ opacity }}

      ## Converts time and date into sentence for UI
      # OFFLINE SENSORS - These depend on sensor.date which is unavailable
      # Uncomment when date/time sensors are working properly
      # day:
      #   value_template: >
      #     {% set days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] %}
      #     {{ strptime(states('sensor.date'), '%Y-%m-%d').day }}
      #     {{ days[now().weekday()] }}

      # month:
      #   value_template: >
      #     {% set months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] %}
      #     {{ strptime(states('sensor.date'), '%Y-%m-%d').day }}
      #     {{ months[now().month-1] }}

      # date_string:
      #   friendly_name: "Full Date"
      #   value_template: "{{ states('sensor.day') }}, {{ states('sensor.month') }} {{ now().year }}"

      ## Vacuum templates - OFFLINE - vacuum.xiaomi_vacuum_cleaner is unavailable
      # Uncomment when vacuum hardware is reconnected
      # vacuum_status:
      #   friendly_name: "Vacuum - Status"
      #   value_template: "{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}"

      # vacuum_cleaning_status:
      #   friendly_name: "Vacuum - Cleaning Status"
      #   value_template: "Cleaning {{ states('input_text.room_cleaning') }}"

      # vacuum_battery:
      #   friendly_name: "Vacuum - Battery"
      #   value_template: "{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_level }}"
      #   device_class: battery
      #   unit_of_measurement: '%'

      # vacuum_fan:
      #   friendly_name: "Vacuum - Fan Speed"
      #   value_template: "{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.fan_speed }}"

      # vacuum_battery_icon:
      #   friendly_name: "Vacuum - Battery Icon"
      #   icon_template: "{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_icon }}"
      #   value_template: "{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_icon }}"

      # vacuum_cleaning_time:
      #   friendly_name: "Vacuum - Cleaning Time"
      #   value_template: "{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time }}"

      # vacuum_cleaned_area:
      #   friendly_name: "Vacuum - Cleaned Area"
      #   value_template: "{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaned_area }}"

#################################################################
## Light Groups - ALL OFFLINE
## Individual lights (light.kitchen_1, light.couch, etc.) are unavailable
## Uncomment when Z-Wave/Zigbee light network is restored
#################################################################

# light:
#  - platform: group
#    name: Kitchen Lights
#    entities:
#     - light.kitchen_1
#     - light.kitchen_2
#     - light.kitchen_3
#     - light.kitchen_4

#  - platform: group
#    name: Roof Lights
#    entities:
#      - light.roof_garden
#      - light.roof_plants

#  - platform: group
#    name: Kitchen Fridge Lights
#    entities:
#      - light.kitchen_1
#      - light.kitchen_2

#  - platform: group
#    name: Kitchen Sink Lights
#    entities:
#      - light.kitchen_3
#      - light.kitchen_4

#  - platform: group
#    name: Living Room Lights
#    entities:
#      - light.couch
#      - light.table
#      - light.cabinet

#  - platform: group
#    name: Toilet Lights
#    entities:
#      - light.toilet_1
#      - light.toilet_2

#  - platform: group
#    name: Bedroom Lights
#    entities:
#      - light.bedroom_roof
#      - light.bed

#  - platform: group
#    name: Stairs Lights
#    entities:
#      - light.stairs_2
#      - light.door

##############################################
############## DEVELOPMENT ENTITIES #########
##############################################
# These entities match your planned floorplan design
# They use the exact same entity names from your commented code
# When you buy real devices, just uncomment the real sections below

# Development Light Entities - matching your actual home layout
input_boolean:
  # Bedroom John
  bedroom_john_closet:
    name: "Bedroom John Closet Light"
    icon: mdi:lightbulb
  bedroom_john_desk:
    name: "Bedroom John Desk Light"
    icon: mdi:lightbulb
  bedroom_john_ceiling:
    name: "Bedroom John Ceiling Light"
    icon: mdi:ceiling-light

  # Bedroom Guest
  bedroom_guest_closet:
    name: "Bedroom Guest Closet Light"
    icon: mdi:lightbulb
  bedroom_guest_ceiling:
    name: "Bedroom Guest Ceiling Light"
    icon: mdi:ceiling-light

  # Bedroom Master
  bedroom_master_closet:
    name: "Bedroom Master Closet Light"
    icon: mdi:lightbulb
  bedroom_master_ceiling:
    name: "Bedroom Master Ceiling Light"
    icon: mdi:ceiling-light

  # Bathroom Guest
  bathroom_guest_toilet:
    name: "Bathroom Guest Toilet Light"
    icon: mdi:lightbulb
  bathroom_guest_shower:
    name: "Bathroom Guest Shower Light"
    icon: mdi:lightbulb
  bathroom_guest_ceiling:
    name: "Bathroom Guest Ceiling Light"
    icon: mdi:ceiling-light

  # Bathroom Master
  bathroom_master_toilet:
    name: "Bathroom Master Toilet Light"
    icon: mdi:lightbulb
  bathroom_master_shower:
    name: "Bathroom Master Shower Light"
    icon: mdi:lightbulb
  bathroom_master_ceiling:
    name: "Bathroom Master Ceiling Light"
    icon: mdi:ceiling-light
  bathroom_master_cabinet:
    name: "Bathroom Master Cabinet Light"
    icon: mdi:lightbulb
  bathroom_master_mirror:
    name: "Bathroom Master Mirror Light"
    icon: mdi:lightbulb

  # Family Room
  family_room_wall_tv:
    name: "Family Room Wall TV Light"
    icon: mdi:lightbulb
  family_room_couch:
    name: "Family Room Couch Light"
    icon: mdi:lightbulb
  family_room_ceiling:
    name: "Family Room Ceiling Light"
    icon: mdi:ceiling-light

  # Living Room
  living_room_wall:
    name: "Living Room Wall Light"
    icon: mdi:lightbulb
  living_room_ceiling:
    name: "Living Room Ceiling Light"
    icon: mdi:ceiling-light

  # Kitchen
  kitchen_wall:
    name: "Kitchen Wall Light"
    icon: mdi:lightbulb
  kitchen_ceiling:
    name: "Kitchen Ceiling Light"
    icon: mdi:ceiling-light
  kitchen_cabinets:
    name: "Kitchen Cabinets Light"
    icon: mdi:lightbulb
  kitchen_island:
    name: "Kitchen Island Light"
    icon: mdi:lightbulb

# Development Light Groups - matching your actual home layout
light:
  - platform: template
    lights:
      # Bedroom John Lights
      bedroom_john_closet:
        friendly_name: "Bedroom John Closet Light"
        value_template: "{{ is_state('input_boolean.bedroom_john_closet', 'on') }}"
        level_template: "{{ states('input_number.bedroom_john_closet_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.bedroom_john_closet
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.bedroom_john_closet
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.bedroom_john_closet_brightness
            value: "{{ brightness }}"

      bedroom_john_desk:
        friendly_name: "Bedroom John Desk Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.bedroom_john_desk
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.bedroom_john_desk
        set_level:
          - service: input_number.set_value
            entity_id: input_number.bedroom_john_desk_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.bedroom_john_desk', 'on') }}"
        level_template: "{{ states('input_number.bedroom_john_desk_brightness') | int }}"

      bedroom_john_ceiling:
        friendly_name: "Bedroom John Ceiling Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.bedroom_john_ceiling
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.bedroom_john_ceiling
        set_level:
          - service: input_number.set_value
            entity_id: input_number.bedroom_john_ceiling_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.bedroom_john_ceiling', 'on') }}"
        level_template: "{{ states('input_number.bedroom_john_ceiling_brightness') | int }}"

      # Bedroom Guest Lights
      bedroom_guest_closet:
        friendly_name: "Bedroom Guest Closet Light"
        value_template: "{{ is_state('input_boolean.bedroom_guest_closet', 'on') }}"
        level_template: "{{ states('input_number.bedroom_guest_closet_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.bedroom_guest_closet
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.bedroom_guest_closet
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.bedroom_guest_closet_brightness
            value: "{{ brightness }}"

      bedroom_guest_ceiling:
        friendly_name: "Bedroom Guest Ceiling Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.bedroom_guest_ceiling
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.bedroom_guest_ceiling
        set_level:
          - service: input_number.set_value
            entity_id: input_number.bedroom_guest_ceiling_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.bedroom_guest_ceiling', 'on') }}"
        level_template: "{{ states('input_number.bedroom_guest_ceiling_brightness') | int }}"

      # Bedroom Master Lights
      bedroom_master_closet:
        friendly_name: "Bedroom Master Closet Light"
        value_template: "{{ is_state('input_boolean.bedroom_master_closet', 'on') }}"
        level_template: "{{ states('input_number.bedroom_master_closet_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.bedroom_master_closet
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.bedroom_master_closet
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.bedroom_master_closet_brightness
            value: "{{ brightness }}"

      bedroom_master_ceiling:
        friendly_name: "Bedroom Master Ceiling Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.bedroom_master_ceiling
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.bedroom_master_ceiling
        set_level:
          - service: input_number.set_value
            entity_id: input_number.bedroom_master_ceiling_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.bedroom_master_ceiling', 'on') }}"
        level_template: "{{ states('input_number.bedroom_master_ceiling_brightness') | int }}"

      # Bathroom Guest Lights
      bathroom_guest_toilet:
        friendly_name: "Bathroom Guest Toilet Light"
        value_template: "{{ is_state('input_boolean.bathroom_guest_toilet', 'on') }}"
        level_template: "{{ states('input_number.bathroom_guest_toilet_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.bathroom_guest_toilet
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.bathroom_guest_toilet
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.bathroom_guest_toilet_brightness
            value: "{{ brightness }}"

      bathroom_guest_shower:
        friendly_name: "Bathroom Guest Shower Light"
        value_template: "{{ is_state('input_boolean.bathroom_guest_shower', 'on') }}"
        level_template: "{{ states('input_number.bathroom_guest_shower_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.bathroom_guest_shower
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.bathroom_guest_shower
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.bathroom_guest_shower_brightness
            value: "{{ brightness }}"

      bathroom_guest_ceiling:
        friendly_name: "Bathroom Guest Ceiling Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.bathroom_guest_ceiling
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.bathroom_guest_ceiling
        set_level:
          - service: input_number.set_value
            entity_id: input_number.bathroom_guest_ceiling_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.bathroom_guest_ceiling', 'on') }}"
        level_template: "{{ states('input_number.bathroom_guest_ceiling_brightness') | int }}"

      # Bathroom Master Lights
      bathroom_master_toilet:
        friendly_name: "Bathroom Master Toilet Light"
        value_template: "{{ is_state('input_boolean.bathroom_master_toilet', 'on') }}"
        level_template: "{{ states('input_number.bathroom_master_toilet_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.bathroom_master_toilet
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.bathroom_master_toilet
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.bathroom_master_toilet_brightness
            value: "{{ brightness }}"

      bathroom_master_shower:
        friendly_name: "Bathroom Master Shower Light"
        value_template: "{{ is_state('input_boolean.bathroom_master_shower', 'on') }}"
        level_template: "{{ states('input_number.bathroom_master_shower_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.bathroom_master_shower
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.bathroom_master_shower
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.bathroom_master_shower_brightness
            value: "{{ brightness }}"

      bathroom_master_ceiling:
        friendly_name: "Bathroom Master Ceiling Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.bathroom_master_ceiling
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.bathroom_master_ceiling
        set_level:
          - service: input_number.set_value
            entity_id: input_number.bathroom_master_ceiling_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.bathroom_master_ceiling', 'on') }}"
        level_template: "{{ states('input_number.bathroom_master_ceiling_brightness') | int }}"

      bathroom_master_cabinet:
        friendly_name: "Bathroom Master Cabinet Light"
        value_template: "{{ is_state('input_boolean.bathroom_master_cabinet', 'on') }}"
        level_template: "{{ states('input_number.bathroom_master_cabinet_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.bathroom_master_cabinet
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.bathroom_master_cabinet
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.bathroom_master_cabinet_brightness
            value: "{{ brightness }}"

      bathroom_master_mirror:
        friendly_name: "Bathroom Master Mirror Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.bathroom_master_mirror
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.bathroom_master_mirror
        set_level:
          - service: input_number.set_value
            entity_id: input_number.bathroom_master_mirror_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.bathroom_master_mirror', 'on') }}"
        level_template: "{{ states('input_number.bathroom_master_mirror_brightness') | int }}"

      # Family Room Lights
      family_room_wall_tv:
        friendly_name: "Family Room Wall TV Light"
        value_template: "{{ is_state('input_boolean.family_room_wall_tv', 'on') }}"
        level_template: "{{ states('input_number.family_room_wall_tv_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.family_room_wall_tv
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.family_room_wall_tv
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.family_room_wall_tv_brightness
            value: "{{ brightness }}"

      family_room_couch:
        friendly_name: "Family Room Couch Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.family_room_couch
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.family_room_couch
        set_level:
          - service: input_number.set_value
            entity_id: input_number.family_room_couch_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.family_room_couch', 'on') }}"
        level_template: "{{ states('input_number.family_room_couch_brightness') | int }}"

      family_room_ceiling:
        friendly_name: "Family Room Ceiling Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.family_room_ceiling
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.family_room_ceiling
        set_level:
          - service: input_number.set_value
            entity_id: input_number.family_room_ceiling_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.family_room_ceiling', 'on') }}"
        level_template: "{{ states('input_number.family_room_ceiling_brightness') | int }}"

      # Living Room Lights
      living_room_wall:
        friendly_name: "Living Room Wall Light"
        value_template: "{{ is_state('input_boolean.living_room_wall', 'on') }}"
        level_template: "{{ states('input_number.living_room_wall_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.living_room_wall
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.living_room_wall
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.living_room_wall_brightness
            value: "{{ brightness }}"

      living_room_ceiling:
        friendly_name: "Living Room Ceiling Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.living_room_ceiling
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.living_room_ceiling
        set_level:
          - service: input_number.set_value
            entity_id: input_number.living_room_ceiling_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.living_room_ceiling', 'on') }}"
        level_template: "{{ states('input_number.living_room_ceiling_brightness') | int }}"

      # Kitchen Lights
      kitchen_wall:
        friendly_name: "Kitchen Wall Light"
        value_template: "{{ is_state('input_boolean.kitchen_wall', 'on') }}"
        level_template: "{{ states('input_number.kitchen_wall_brightness') | int }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.kitchen_wall
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.kitchen_wall
        set_level:
          service: input_number.set_value
          data:
            entity_id: input_number.kitchen_wall_brightness
            value: "{{ brightness }}"

      kitchen_ceiling:
        friendly_name: "Kitchen Ceiling Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.kitchen_ceiling
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.kitchen_ceiling
        set_level:
          - service: input_number.set_value
            entity_id: input_number.kitchen_ceiling_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.kitchen_ceiling', 'on') }}"
        level_template: "{{ states('input_number.kitchen_ceiling_brightness') | int }}"

      kitchen_cabinets:
        friendly_name: "Kitchen Cabinets Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.kitchen_cabinets
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.kitchen_cabinets
        set_level:
          - service: input_number.set_value
            entity_id: input_number.kitchen_cabinets_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.kitchen_cabinets', 'on') }}"
        level_template: "{{ states('input_number.kitchen_cabinets_brightness') | int }}"

      kitchen_island:
        friendly_name: "Kitchen Island Light"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.kitchen_island
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.kitchen_island
        set_level:
          - service: input_number.set_value
            entity_id: input_number.kitchen_island_brightness
            data:
              value: "{{ brightness }}"
        value_template: "{{ is_state('input_boolean.kitchen_island', 'on') }}"
        level_template: "{{ states('input_number.kitchen_island_brightness') | int }}"

  # Room Light Groups - matching your actual home layout
  - platform: group
    name: Bedroom John
    entities:
      - light.bedroom_john_closet
      - light.bedroom_john_desk
      - light.bedroom_john_ceiling

  - platform: group
    name: Bedroom Guest
    entities:
      - light.bedroom_guest_closet
      - light.bedroom_guest_ceiling

  - platform: group
    name: Bedroom Master
    entities:
      - light.bedroom_master_closet
      - light.bedroom_master_ceiling

  - platform: group
    name: Bathroom Guest
    entities:
      - light.bathroom_guest_toilet
      - light.bathroom_guest_shower
      - light.bathroom_guest_ceiling

  - platform: group
    name: Bathroom Master
    entities:
      - light.bathroom_master_toilet
      - light.bathroom_master_shower
      - light.bathroom_master_ceiling
      - light.bathroom_master_cabinet
      - light.bathroom_master_mirror

  - platform: group
    name: Family Room
    entities:
      - light.family_room_wall_tv
      - light.family_room_couch
      - light.family_room_ceiling

  - platform: group
    name: Living Room
    entities:
      - light.living_room_wall
      - light.living_room_ceiling

  - platform: group
    name: Kitchen
    entities:
      - light.kitchen_wall
      - light.kitchen_ceiling
      - light.kitchen_cabinets
      - light.kitchen_island

  - platform: group
    name: All Lights
    entities:
      # Bedroom John
      - light.bedroom_john_closet
      - light.bedroom_john_desk
      - light.bedroom_john_ceiling
      # Bedroom Guest
      - light.bedroom_guest_closet
      - light.bedroom_guest_ceiling
      # Bedroom Master
      - light.bedroom_master_closet
      - light.bedroom_master_ceiling
      # Bathroom Guest
      - light.bathroom_guest_toilet
      - light.bathroom_guest_shower
      - light.bathroom_guest_ceiling
      # Bathroom Master
      - light.bathroom_master_toilet
      - light.bathroom_master_shower
      - light.bathroom_master_ceiling
      - light.bathroom_master_cabinet
      - light.bathroom_master_mirror
      # Family Room
      - light.family_room_wall_tv
      - light.family_room_couch
      - light.family_room_ceiling
      # Living Room
      - light.living_room_wall
      - light.living_room_ceiling
      # Kitchen
      - light.kitchen_wall
      - light.kitchen_ceiling
      - light.kitchen_cabinets
      - light.kitchen_island

# Development Template Sensors
template:
  - sensor:
      # Mock temperature sensors
      - name: "Living Room Temperature"
        state: "{{ 22 + (range(-2, 3) | random) }}"
        unit_of_measurement: "°C"
        device_class: temperature

      - name: "Bedroom Temperature"
        state: "{{ 21 + (range(-1, 2) | random) }}"
        unit_of_measurement: "°C"
        device_class: temperature

      - name: "Kitchen Temperature"
        state: "{{ 23 + (range(-1, 3) | random) }}"
        unit_of_measurement: "°C"
        device_class: temperature

      # Mock humidity sensors
      - name: "Living Room Humidity"
        state: "{{ 45 + (range(-5, 10) | random) }}"
        unit_of_measurement: "%"
        device_class: humidity

      - name: "Bedroom Humidity"
        state: "{{ 50 + (range(-3, 8) | random) }}"
        unit_of_measurement: "%"
        device_class: humidity

      # Mock energy consumption
      - name: "Energy Consumption"
        state: "{{ 1.5 + (range(0, 50) | random / 100) }}"
        unit_of_measurement: "kWh"
        device_class: energy

  - binary_sensor:
      # Mock motion sensors
      - name: "Living Room Motion"
        state: "{{ 'on' if now().hour > 6 and now().hour < 23 and (range(0, 10) | random < 2) else 'off' }}"
        device_class: motion

      - name: "Bedroom Motion"
        state: "{{ 'on' if now().hour > 22 or now().hour < 8 and (range(0, 10) | random < 1) else 'off' }}"
        device_class: motion

      - name: "Kitchen Motion"
        state: "{{ 'on' if (range(0, 10) | random < 3) else 'off' }}"
        device_class: motion

      # Mock door sensors
      - name: "Front Door"
        state: "{{ 'on' if (range(0, 100) | random < 5) else 'off' }}"
        device_class: door

      - name: "Back Door"
        state: "{{ 'on' if (range(0, 100) | random < 2) else 'off' }}"
        device_class: door

# Mock select for different modes
input_select:
  mock_house_mode:
    name: House Mode
    options:
      - "Home"
      - "Away"
      - "Sleep"
      - "Vacation"
    icon: mdi:home-account

  mock_music_source:
    name: Music Source
    options:
      - "Spotify"
      - "Apple Music"
      - "Radio"
      - "Bluetooth"
    icon: mdi:music
